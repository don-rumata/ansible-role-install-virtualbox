---

# https://fixmypc.ru/post/powershell-replace-zamena-strok-v-tekste-i-faile/
- name: Get facts about Extension Pack 4 Windows
  when:
    - ansible_os_family == 'Windows'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  win_shell: |
    $for_yaml = VBoxManage list extpacks
    $for_yaml -replace '^', '  ' -replace '  Extension', '- Extension'
  register: vboxmanage_list_extpacks_windows
  changed_when: vboxmanage_list_extpacks_windows.rc != 0

#---

# https://stackoverflow.com/q/57837867
- name: Get facts about Extension Pack 4 Linux
  when:
    - ansible_system == 'Linux'
  become: yes
  shell: vboxmanage list extpacks | sed 's/^/  / ; s/  Extension/- Extension/'
  register: vboxmanage_list_extpacks_linux
  changed_when: vboxmanage_list_extpacks_linux.rc != 0

# {
#   "virtualbox_installed_extpack_info_fact": [
#     {
#       "Description": "Oracle Cloud Infrastructure integration, USB 2.0 and USB 3.0 Host Controller, Host Webcam, VirtualBox RDP, PXE ROM, Disk Encryption, NVMe.",
#       "Edition": null,
#       "Extension Packs": 1,
#       "Pack no. 0": "Oracle VM VirtualBox Extension Pack",
#       "Revision": 149290,
#       "Usable": true,
#       "VRDE Module": "VBoxVRDP",
#       "Version": "6.1.32",
#       "Why unusable": null
#     }
#   ]
# }

# TODO. Я не знаю как сделать мЕньшим количеством кода, поэтому воткнул заглушку "plugobj".
- name: Set facts about Extension Pack
  vars:
    plugobj:
      plugkey: plugvalue
  set_fact:
    virtualbox_installed_extpack_info_linux_fact:
      "{{ vboxmanage_list_extpacks_linux.stdout
      | from_yaml
      | default(plugobj) }}"
    virtualbox_installed_extpack_info_windows_fact:
      "{{ vboxmanage_list_extpacks_windows.stdout
      | from_yaml
      | default(plugobj) }}"

# Оба варианта корректно работают. Оставил для примера.
- set_fact:
    # virtualbox_installed_extpack_info_fact: "{{ virtualbox_installed_extpack_info_linux_fact | combine(virtualbox_installed_extpack_info_windows_fact) }}"
    virtualbox_installed_extpack_info_fact:
      "{{ virtualbox_installed_extpack_info_windows_fact
      | combine(virtualbox_installed_extpack_info_linux_fact) }}"

# 4 debug
# - name:
#   when: virtualbox_installed_extpack_info_fact1 == virtualbox_installed_extpack_info_fact2
#   win_command: whoami
#   command: whoami

#---

- name: Set facts about Extension Pack
  vars:
    # VERY dirty hacks. TODO!
    virtualbox_installed_extpack_numbers_windows_var:
      '{{ (vboxmanage_list_extpacks_windows.stdout
      | regex_search("^Extension.*", multiline=True, ignorecase=True)).split(":")[1]
      | trim }}'
    virtualbox_installed_extpack_numbers_linux_var:
      '{{ (vboxmanage_list_extpacks_linux.stdout
      | regex_search("^Extension.*", multiline=True, ignorecase=True)).split(":")[1]
      | trim }}'

    virtualbox_installed_extpack_version_windows_var:
      '{{ (vboxmanage_list_extpacks_windows.stdout
      | regex_search("^Version.*", multiline=True, ignorecase=True)).split(":")[1]
      | trim }}'
    virtualbox_installed_extpack_version_linux_var:
      '{{ (vboxmanage_list_extpacks_linux.stdout
      | regex_search("^Version.*", multiline=True, ignorecase=True)).split(":")[1]
      | trim }}'

    virtualbox_installed_extpack_revision_windows_var:
      '{{ (vboxmanage_list_extpacks_windows.stdout
      | regex_search("^Revision.*", multiline=True, ignorecase=True)).split(":")[1]
      | trim }}'
    virtualbox_installed_extpack_revision_linux_var:
      '{{ (vboxmanage_list_extpacks_linux.stdout
      | regex_search("^Revision.*", multiline=True, ignorecase=True)).split(":")[1]
      | trim }}'
  block:
    # Default value
    - set_fact:
        virtualbox_installed_extpack_numbers_fact: 0
    - set_fact:
        virtualbox_installed_extpack_numbers_fact: "{{ virtualbox_installed_extpack_numbers_windows_var }}"
      when:
        - ansible_os_family == 'Windows'
    - set_fact:
        virtualbox_installed_extpack_numbers_fact: '{{ virtualbox_installed_extpack_numbers_linux_var }}'
      when:
        - ansible_system == 'Linux'

    #---------------------------------------------------------------------------------------------------------------------------------#
    # Default value
    - set_fact:
        virtualbox_installed_extpack_version_fact: 0
    - set_fact:
        virtualbox_installed_extpack_version_fact: "{{ virtualbox_installed_extpack_version_windows_var }}"
      when:
        - ansible_os_family == 'Windows'
        - virtualbox_installed_extpack_numbers_fact != 0
    - set_fact:
        virtualbox_installed_extpack_version_fact: "{{ virtualbox_installed_extpack_version_linux_var }}"
      when:
        - ansible_system == 'Linux'
        - virtualbox_installed_extpack_numbers_fact != 0
    #---------------------------------------------------------------------------------------------------------------------------------#
    # Default value
    - set_fact:
        virtualbox_installed_extpack_revision_fact: 0
    - set_fact:
        virtualbox_installed_extpack_revision_fact: "{{ virtualbox_installed_extpack_revision_windows_var }}"
      when:
        - ansible_os_family == 'Windows'
        - virtualbox_installed_extpack_numbers_fact != 0
    - set_fact:
        virtualbox_installed_extpack_revision_fact: "{{ virtualbox_installed_extpack_revision_linux_var }}"
      when:
        - ansible_system == 'Linux'
        - virtualbox_installed_extpack_numbers_fact != 0
    #---------------------------------------------------------------------------------------------------------------------------------#
    # !!!
    # Default value.
    - set_fact:
        virtualbox_full_installed_extpack_version_fact: 0
    - set_fact:
        virtualbox_full_installed_extpack_version_fact: '{{ virtualbox_installed_extpack_version_fact }}.{{ virtualbox_installed_extpack_revision_fact }}'
      when:
        - ansible_os_family == 'Windows'
        - virtualbox_installed_extpack_numbers_fact != 0
    - set_fact:
        virtualbox_full_installed_extpack_version_fact: '{{ virtualbox_installed_extpack_version_fact }}.{{ virtualbox_installed_extpack_revision_fact }}'
      when:
        - ansible_system == 'Linux'
        - virtualbox_installed_extpack_numbers_fact != 0

#---

# https://forums.virtualbox.org/viewtopic.php?f=6&t=82761#p391279
- name: Install\Update VirtualBox Extension Pack 4 Windows
  when:
    - ansible_os_family == 'Windows'
    - ansible_env.PROCESSOR_ARCHITECTURE == 'AMD64'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  block:
    - win_shell: 'echo y | VBoxManage extpack install --replace {{ virtualbox_windows_local_download_path }}\{{ virtualbox_available_extpack_filename_fact }}'
#---
- name: Install\Update VirtualBox Extension Pack 4 Linux
  when: ansible_system == 'Linux'
  become: yes
  block:
    - shell: yes | VBoxManage extpack install --replace /tmp/{{ virtualbox_available_extpack_filename_fact }}
    - file:
        path: '/tmp/{{ virtualbox_available_extpack_filename_fact }}'
        state: absent
